server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    # rewrite ^ https://$host$1 permanent;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        # proxy_pass http://web:3000;     #地址web是docker-compose.yml里面的web服务名,3000端口是nodejs的端口号。
        root /usr/share/nginx/html;
        index index.html index.htm;
    }

    location /love {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /love/index.html;
        
    }
    location /gw/dist{
       root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /gw/dist/; 
    }

    location /static {
        alias /code/static;             #路径可以自定义，放在什么目录都可以
    }

    

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

#以下属性中，以ssl开头的属性表示与证书配置有关。
# server {
#     listen 443 ssl;
#     #配置HTTPS的默认访问端口为443。
#     #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
#     #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
#     server_name clond.lanyu131.com; #需要将yourdomain.com替换成证书绑定的域名。
#     # root html;
#     # index index.html index.htm;
#     ssl_certificate /etc/nginx/cert/5036614_clond.lanyu131.com.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
#     ssl_certificate_key /etc/nginx/cert/5036614_clond.lanyu131.com.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
#     ssl_session_timeout 5m;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#     #表示使用的加密套件的类型。
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
#     ssl_prefer_server_ciphers on;


#     location / {
#         proxy_pass http://web:3000;     #地址web是docker-compose.yml里面的web服务名,3000端口是nodejs的端口号。
#     }

#     location /love {
#         root /usr/share/nginx/html;
#         index index.html index.htm;
#         try_files $uri $uri/ /love/index.html;
        
#     }

#     location /static {
#         alias /code/static;             #路径可以自定义，放在什么目录都可以
#     }
# }

